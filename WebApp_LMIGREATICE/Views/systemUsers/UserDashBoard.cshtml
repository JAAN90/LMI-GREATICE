@model WebApp_LMIGREATICE.Models.systemUser

@{
    ViewBag.Title = "UserDashBoard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*<h2 class="text-center">User DashBoard</h2>*@

<fieldset>
    @if (Session["name"] != null)
    {
        @*<text>Welcome @Session["name"].ToString() </text>*@
        <h2 class="text-center">Welcome to your account settings, @Session["name"].ToString()</h2>
    }


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.idSystemUser)

            <div class="row">
                <div class="col-sm-6 col-md-6 col-lg-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.firstName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.lastName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.passwordU, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.passwordU, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.passwordU, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.idGender, "Gender", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @if (ViewBag.genders != null)
                            {
                                @Html.DropDownListFor(model => model.idGender, ViewBag.genders as SelectList, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                            }
                            @Html.ValidationMessageFor(model => model.idGender, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.idTitle, "Title", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @if (ViewBag.titles != null)
                            {
                                @Html.DropDownListFor(model => model.idTitle, ViewBag.titles as SelectList, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                            }
                            @Html.ValidationMessageFor(model => model.idTitle, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-6 col-md-6 col-lg-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.dateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.dateOfBirth, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.dateOfBirth, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.idCountry, "Country", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @if (ViewBag.countries != null)
                            {
                                @Html.DropDownListFor(model => model.idCountry, ViewBag.countries as SelectList, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                            }
                            @Html.ValidationMessageFor(model => model.idCountry, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.idInstitution, "Institution", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @if (ViewBag.institutions != null)
                            {
                                @Html.DropDownListFor(model => model.idInstitution, ViewBag.institutions as SelectList, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                            }
                            @Html.ValidationMessageFor(model => model.idInstitution, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                            @Html.LabelFor(model => model.idUserPrivilege, "User Privilege", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @if (ViewBag.privileges != null)
                                {
                                    @Html.DropDownListFor(model => model.idUserPrivilege, ViewBag.privileges as SelectList, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                                }
                                @Html.ValidationMessageFor(model => model.idUserPrivilege, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    <div class="form-group">
                            @Html.LabelFor(model => model.idUserState, "User State", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @if (ViewBag.states != null)
                                {
                                    @Html.DropDownListFor(model => model.idUserState, ViewBag.states as SelectList, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                                }
                                @Html.ValidationMessageFor(model => model.idUserState, "", new { @class = "text-danger" })
                            </div>
                        </div>
                </div>
            </div>

            <div class="form-group text-center">
                <div class="col-md-10">
                    @*<input type="submit" value="Save" class="btn btn-default wine-border-button" />*@
                    @Html.ActionLink("Edit", "Edit", new{ id= Model.idSystemUser}  , htmlAttributes: new { @class = "btn btn-default wine-border-button" })
                    @*@if (model.idUserPrivilege == 1)
        {
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default wine-border-button" })
        }*@

                </div>
            </div>
        </div>
    }
</fieldset>
